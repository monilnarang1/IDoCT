diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/TestCryptoStreams.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/TestCryptoStreams.java
index 73c62496123..6e0b0d2d590 100644
--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/TestCryptoStreams.java
+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/TestCryptoStreams.java
@@ -23,6 +23,7 @@
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.nio.ByteBuffer;
+import java.security.SecureRandom;
 import java.util.EnumSet;

 import org.apache.hadoop.conf.Configuration;
@@ -45,6 +46,8 @@
 import org.junit.BeforeClass;
 import org.junit.Test;

+import static org.apache.hadoop.fs.CommonConfigurationKeysPublic.HADOOP_SECURITY_JAVA_SECURE_RANDOM_ALGORITHM_DEFAULT;
+import static org.apache.hadoop.fs.CommonConfigurationKeysPublic.HADOOP_SECURITY_JAVA_SECURE_RANDOM_ALGORITHM_KEY;
 import static org.apache.hadoop.fs.contract.ContractTestUtils.assertCapabilities;

 public class TestCryptoStreams extends CryptoStreamsTestBase {
@@ -502,4 +505,19 @@ public void testHasCapability() throws Exception {
         }
     );
   }
+
+  /**
+   * This test tests invalid configuration for param: hadoop.security.java.secure.random.algorithm
+   */
+  @Test(timeout = 120000)
+  public void testSecureRandomAlgorithmConfiguration() throws Exception {
+
+    // config verification
+    Configuration conf = new Configuration();
+    String secureRandomAlg = conf.get(
+            HADOOP_SECURITY_JAVA_SECURE_RANDOM_ALGORITHM_KEY,
+            HADOOP_SECURITY_JAVA_SECURE_RANDOM_ALGORITHM_DEFAULT);
+    SecureRandom random = SecureRandom.getInstance(secureRandomAlg);
+    // throws java.security.NoSuchAlgorithmException if secureRandomAlg is not available
+  }
 }
